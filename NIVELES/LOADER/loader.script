local chats = require("SISTEMA CONVERSACIONES.chats")
local datos_nivel = require("NIVELES.datos_nivel");
-- funcs
local music_on_off;
local actualizar_lvl_counter;

local chat_lvl = function(self)
	chats.lvl = self.lvl_counter - 1;
end
function init(self)
	msg.post("", "acquire_input_focus")
	--print("loader ok")
	msg.post("#main_menu", "load")
	--
	self.next_lvl = ""
	self.lvl_counter = 1;
	self.lvl_table = {"#main_menu", "#LVL1", "#LVL2", "#LVL3", "#LVL4", 
	"#LVL5", "#LVL6", "#LVL7", "#LVL8", 
	"#LVL9", "#LVL10", "#LVL11", "#LVL12", "#main_menu"};
	--
	self.musica = false;
	sound.play("musica#sound");
	sound.pause("musica#sound", true);
	-- 
	self.restart = false;
	self.resume_lvl = 1;
	
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("proxy_loaded") then
		-- New world is loaded. Init and enable it.
		msg.post("visual#transicion", "achicar_box")
		msg.post(sender, "init")
		msg.post(sender, "enable")
	elseif message_id == hash("next_lvl") then
		msg.post("visual#transicion", "agrandar_box")
		--
		local function pasar_lvl()
			msg.post(self.lvl_table[self.lvl_counter], "unload")
			actualizar_lvl_counter(self, self.lvl_counter + 1);
			chat_lvl(self);
			msg.post(self.lvl_table[self.lvl_counter], "load")
			if self.lvl_counter >= #self.lvl_table then
				self.lvl_counter = 1;
				chat_lvl(self);
			end
		end
		timer.delay(0.65, false, pasar_lvl)
	elseif	message_id == hash("proxy_unloaded") then
		if self.restart then
			self.restart = false;
			actualizar_lvl_counter(self, self.lvl_counter);
			chat_lvl(self);
			msg.post(self.lvl_table[self.lvl_counter], "load")
		end
		--print("unloaded collection")
	elseif message_id == hash("load_lvl") then
		msg.post(self.lvl_table[self.lvl_counter], "unload")
		--self.lvl_counter = self.lvl_counter + message.lvl;
		actualizar_lvl_counter(self, self.lvl_counter + message.lvl);
		chat_lvl(self);
		msg.post(self.lvl_table[self.lvl_counter], "load")
	elseif message_id == hash("main_menu") then
		msg.post("visual#transicion", "agrandar_box")
		--
		local volver_al_menu = function()
			self.resume_lvl = self.lvl_counter-1;
			msg.post(self.lvl_table[self.lvl_counter], "unload")
			self.lvl_counter = 1;
			actualizar_lvl_counter(self, 1);
			chat_lvl(self);
			msg.post(self.lvl_table[self.lvl_counter], "load")
		end
		timer.delay(0.65, false, volver_al_menu)
	elseif message_id == hash("restart_lvl") then
		msg.post("visual#transicion", "agrandar_box")
		--
		local function restart_lvl()
			msg.post(self.lvl_table[self.lvl_counter], "unload")
			self.restart = true;
		end
		timer.delay(0.65, false, restart_lvl)
	elseif message_id == hash("resume_lvl") then
		msg.post("visual#transicion", "agrandar_box")
		--
		local function pasar_lvl()
			msg.post(self.lvl_table[self.lvl_counter], "unload")
			actualizar_lvl_counter(self, self.lvl_counter + self.resume_lvl);
			chat_lvl(self);
			msg.post(self.lvl_table[self.lvl_counter], "load")
			
		end
		timer.delay(0.65, false, pasar_lvl)
	elseif message_id == hash("musica") then
		music_on_off(self);
	end
end

actualizar_lvl_counter = function(self, igual_a_que)
	-- Actualiza el contador de la tabla 'self.lvl_table'
	self.lvl_counter = igual_a_que;
	--print("actualizando lvl counter");
	--
	-- Actualiza los puntos que haya conseguido el player a 0 y actualiza que nivel estamos jugando.
	datos_nivel.puntos_obtenidos = 0;
	datos_nivel.jugando_nivel_numero = self.lvl_counter - 1;
end

music_on_off = function(self)
	if self.musica == true then
		sound.pause("musica#sound", true)
		self.musica = false;
	else
		sound.pause("musica#sound", false)
		self.musica = true;	
	end
end
function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
